line 373:12 extraneous input 'payable' expecting {'~', 'from', '{', '}', '(', 'for', 'function', '[', 'address', 'mapping', 'calldata', 'if', 'while', 'assembly', 'do', 'return', 'throw', 'emit', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteral, 'break', 'continue', Identifier, StringLiteral}
line 417:20 extraneous input 'payable' expecting {'~', 'from', '(', '[', 'address', 'calldata', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteral, Identifier, StringLiteral}
line 456:27 extraneous input 'payable' expecting {'~', 'from', '(', '[', 'address', 'calldata', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteral, Identifier, StringLiteral}
line 508:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'interface', 'library'}
line 513:12 mismatched input '(' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 515:15 extraneous input '(' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 515:22 mismatched input '!=' expecting {';', '='}
line 515:32 mismatched input '(' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 518:20 extraneous input ':=' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 518:28 mismatched input '(' expecting {';', '='}
line 519:24 extraneous input '(' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 519:28 mismatched input ',' expecting {';', '='}
line 519:45 mismatched input '(' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 520:23 extraneous input ':=' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 520:38 mismatched input '(' expecting {';', '='}
line 520:42 mismatched input '(' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 520:51 extraneous input ',' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 520:56 mismatched input ',' expecting {';', '='}
line 520:70 mismatched input '(' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 521:21 extraneous input ':=' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 521:38 mismatched input '(' expecting {';', '='}
line 522:26 extraneous input '(' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 522:30 mismatched input ',' expecting {';', '='}
line 522:39 mismatched input ')' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 525:12 mismatched input 'case' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 525:27 extraneous input '(' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 525:31 mismatched input ',' expecting {';', '='}
line 525:37 mismatched input ')' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 526:12 extraneous input 'default' expecting {<EOF>, 'pragma', 'import', 'contract', 'interface', 'library'}
line 719:22 extraneous input 'payable' expecting {'~', 'from', '(', '[', 'address', 'calldata', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteral, Identifier, StringLiteral}
line 723:11 mismatched input '(' expecting {'from', 'calldata', 'constant', 'internal', 'private', 'public', Identifier}
line 732:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'interface', 'library'}
Traceback (most recent call last):
  File "/conkas/conkas.py", line 137, in <module>
    main()
  File "/conkas/conkas.py", line 79, in main
    solc_version = get_solc_version_string(file)
  File "/conkas/conkas.py", line 21, in get_solc_version_string
    parsed = parse(file.read().decode('utf-8'))
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 1023, in parse
    return ast.visit(getattr(parser, start)())
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 92, in visit
    return super().visit(tree)
  File "/usr/local/lib/python3.8/dist-packages/antlr4/tree/Tree.py", line 34, in visit
    return tree.accept(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/solidity_antlr4/SolidityParser.py", line 842, in accept
    return visitor.visitSourceUnit(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 114, in visitSourceUnit
    children=self.visit(ctx.children[:-1]))  # skip EOF
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 90, in visit
    return self._visit_nodes(tree)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 104, in _visit_nodes
    childResult = c.accept(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/solidity_antlr4/SolidityParser.py", line 1475, in accept
    return visitor.visitContractDefinition(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 995, in visitContractDefinition
    subNodes=self.visit(ctx.contractPart()),
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 90, in visit
    return self._visit_nodes(tree)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 104, in _visit_nodes
    childResult = c.accept(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/solidity_antlr4/SolidityParser.py", line 1673, in accept
    return visitor.visitContractPart(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 144, in visitContractPart
    return self.visit(ctx.children[0])
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 92, in visit
    return super().visit(tree)
  File "/usr/local/lib/python3.8/dist-packages/antlr4/tree/Tree.py", line 34, in visit
    return tree.accept(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/solidity_antlr4/SolidityParser.py", line 2247, in accept
    return visitor.visitFunctionDefinition(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 183, in visitFunctionDefinition
    block = self.visit(ctx.block()) if ctx.block() else []
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 92, in visit
    return super().visit(tree)
  File "/usr/local/lib/python3.8/dist-packages/antlr4/tree/Tree.py", line 34, in visit
    return tree.accept(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/solidity_antlr4/SolidityParser.py", line 3659, in accept
    return visitor.visitBlock(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 409, in visitBlock
    statements=self.visit(ctx.statement()))
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 90, in visit
    return self._visit_nodes(tree)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 104, in _visit_nodes
    childResult = c.accept(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/solidity_antlr4/SolidityParser.py", line 3763, in accept
    return visitor.visitStatement(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 447, in visitStatement
    return self.visit(ctx.getChild(0))
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 92, in visit
    return super().visit(tree)
  File "/usr/local/lib/python3.8/dist-packages/antlr4/tree/Tree.py", line 34, in visit
    return tree.accept(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/solidity_antlr4/SolidityParser.py", line 4057, in accept
    return visitor.visitSimpleStatement(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 450, in visitSimpleStatement
    return self.visit(ctx.getChild(0))
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 92, in visit
    return super().visit(tree)
  File "/usr/local/lib/python3.8/dist-packages/antlr4/tree/Tree.py", line 34, in visit
    return tree.accept(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/solidity_antlr4/SolidityParser.py", line 3873, in accept
    return visitor.visitExpressionStatement(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 414, in visitExpressionStatement
    expression=self.visit(ctx.expression()))
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 92, in visit
    return super().visit(tree)
  File "/usr/local/lib/python3.8/dist-packages/antlr4/tree/Tree.py", line 34, in visit
    return tree.accept(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/solidity_antlr4/SolidityParser.py", line 4926, in accept
    return visitor.visitExpression(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 544, in visitExpression
    right=self.visit(ctx.getChild(2)))
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 92, in visit
    return super().visit(tree)
  File "/usr/local/lib/python3.8/dist-packages/antlr4/tree/Tree.py", line 34, in visit
    return tree.accept(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/solidity_antlr4/SolidityParser.py", line 4926, in accept
    return visitor.visitExpression(self)
  File "/usr/local/lib/python3.8/dist-packages/solidity_parser/parser.py", line 553, in visitExpression
    if ctxArgs.expressionList():
AttributeError: 'NoneType' object has no attribute 'expressionList'
